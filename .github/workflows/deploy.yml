name: Deploy ToDo App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #   - name: Deploy to Ubuntu Server
      #   - uses: azure/login@v1
      - name: Deploy to Ubuntu Server
        uses: azure/login@v2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          enable-AzPSSession: true
          script: |
            sudo apt-get update
            sudo apt-get install -y sshpass
            sshpass -p "${{ secrets.PASSWORD }}" ssh -tt -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /home/namxal/ToDo-Server
            ls -l
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d
    #   - uses: azure/login@v1
    #     with:
    #       HOST: ${{ secrets.HOST }}
    #       USERNAME: ${{ secrets.USERNAME }}
    #       PASSWORD: ${{ secrets.PASSWORD }}
    #       PORT: ${{ secrets.PORT }}
    #     run: |
    #   sudo apt-get update
    #   sudo apt-get install -y sshpass
    #   sshpass -p "${{ secrets.PASSWORD }}" ssh -tt -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
    #   cd /home/namxal/ToDo-Server
    #   ls -l
    #   sudo docker-compose down
    #   sudo docker-compose pull
    #   sudo docker-compose up -d
    #   EOF
